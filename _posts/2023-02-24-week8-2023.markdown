---
layout: post
title:  "Week #8 2023 - Edge Computing"
date:   2023-02-24 20:00:00 +0700
---

## Edge Computing

The rise of the Internet of Things (IoT) has led to an explosion of data generated by connected devices, from sensors and cameras to wearables and smart home appliances. As a result, traditional cloud-based computing models face increasing latency, bandwidth, and security challenges. Edge computing, a distributed computing model that processes and analyzes data closer to where data is generated and activity is performed, has emerged as a promising solution to these challenges.

__The problems with the centralized computing model__

One of the primary issues with centralized computing is that it can lead to high latency or delays in processing data, as data needs to travel back and forth from distant servers or the cloud. It can be especially problematic for applications that require real-time processing, such as autonomous vehicles or industrial automation systems.

Centralized computing can also be vulnerable to network failures or security breaches, as a single point of failure or attack can bring down the entire system. Additionally, transmitting large amounts of data over the network can be costly and inefficient, especially for IoT devices with limited bandwidth.

Edge computing addresses these problems by bringing processing and storage capabilities closer to the data source, enabling faster processing times, improved reliability, enhanced security, and reduced network traffic. By processing data locally, edge computing can also help reduce the dependency on cloud services, which can be especially beneficial when network connectivity is limited or unreliable.

__It doesn't mean a central server is no longer needed, does it?__

Edge computing can operate with or without a central server, depending on the specific implementation and use case. The decision to use a central server or not depends on various factors, including the nature of the data, the computational requirements, and the desired level of control and management.

In some cases, edge computing may complement or extend the capabilities of a centralized cloud-based system, where specific tasks are offloaded to edge devices for faster processing and reduced network traffic.

In other cases, edge computing may be used in a completely decentralized architecture, where there is no central server and all processing and storage is done at the edge. In such cases, edge devices can communicate with each other directly or through a peer-to-peer network.

Overall, the flexibility of edge computing allows for a wide range of architectural options, making it a versatile and adaptable solution for various use cases.

__A new single point of failure__

While Edge Computing offers some security advantages over traditional centralized computing models, such as reduced network traffic and data transmission, potential security concerns emerge from its core component: edge devices.

Edge devices can become new single points of failure because they are entry points that need to be secured, increasing the attack surface for potential security breaches.

Moreover, edge devices may be more vulnerable to physical tampering or theft, which can lead to data breaches or system compromise. Additionally, edge devices may have different security controls and protocols than centralized servers or cloud systems, making them more susceptible to cyber-attacks.

Therefore, it is essential to implement robust security protocols and controls at the edge devices, such as access controls, encryption, and authentication mechanisms. Edge devices should also be regularly monitored and audited to ensure that they operate securely and are not used as a point of entry for attacks.

__The Standards__

Edge computing is a rapidly evolving field with various implementation models and technologies. As such, multiple standards and frameworks are currently being developed to ensure interoperability and compatibility between edge devices and systems. Here are a few examples of edge computing standards:

1. **OpenFog Consortium**: The OpenFog Consortium is an industry consortium focusing on developing an open, interoperable reference architecture for fog computing. The consortium aims to accelerate the adoption of fog computing by defining industry standards and best practices.
2. **Industrial Internet Consortium (IIC)**: The IIC is a non-profit organization that promotes the development and adoption of the Industrial Internet of Things (IIoT). The consortium has developed a framework for edge computing called the Industrial Internet Reference Architecture (IIRA), which provides guidelines for designing and implementing edge computing systems in industrial settings.
3. **European Telecommunications Standards Institute (ETSI)**: ETSI is a standards organization that develops standards for information and communication technologies. It has developed a specification for Mobile Edge Computing (MEC), which provides a framework for deploying edge computing capabilities in mobile networks.
4. **Cloud Native Computing Foundation (CNCF)**: The CNCF is a foundation that aims to promote developing and adopting cloud-native technologies. The foundation has developed a specification for edge computing called Cloud Native Computing Foundation Edge (CNCF Edge), which provides a framework for deploying cloud-native applications at the edge.
5. **IEEE Standards Association**: The IEEE Standards Association develops standards for various technologies, including edge computing. The organization has developed several standards related to edge computing, including the "IEEE 1934 Standard" for the Adoption of Fog Computing and the "IEEE P1935 Standard" for Network Slicing.


These standards and frameworks aim to provide a common language and best practices for edge computing, enabling greater interoperability between different devices and systems. By adopting these standards, organizations can reduce the risk of vendor lock-in and encourage more significant innovation and collaboration in developing edge computing solutions.

__Implementation in various industries__

**Industrial automation**: Edge computing is used in automation applications, like manufacturing and assembly lines, where real-time data processing and analytics are required for quality control, predictive maintenance, and process optimization.

**Smart homes**: Edge computing is used to process and analyze data from connected devices such as smart thermostats, security cameras, and smart appliances, enabling automation and control at the edge.

**Autonomous vehicles**: Edge computing processes and analyzes real-time data from sensors and cameras, allowing quick decision-making and improved safety.

**Healthcare**: Edge computing is used in healthcare applications, such as remote patient monitoring and medical imaging, for faster diagnosis and treatment.

**Retail**: In retail applications like inventory management and customer analytics, Edge computing enables faster decision-making and personalized services.

**Energy**: Edge computing is used in energy applications, like smart grids and renewable energy systems, to enable real-time monitoring and control of energy consumption and production, improving efficiency and reducing costs.

**Agriculture**: Edge computing is used in agriculture applications, such as precision farming and livestock monitoring, to enable real-time data processing and analysis at the edge, improving yields and reducing waste.

__Conclusion__

Edge computing is a rapidly growing field that offers numerous benefits for organizations seeking to process and analyze data closer to the network's edge. By bringing computing resources closer to the devices generating the data, edge computing can reduce latency, improve network efficiency, and enhance data privacy and security.

The future of edge computing looks promising, with increasing adoption and innovation in various industries and use cases. However, challenges such as security and standardization must also be addressed. As edge computing evolves and matures, it will likely become a key enabler of the next generation of digital transformation, providing organizations with new opportunities to leverage data for insights and innovation.

## Tech News

![memo](/assets/images/memo16.png) *[OpenAI releases tool to detect AI-written text](https://www.bleepingcomputer.com/news/technology/openai-releases-tool-to-detect-ai-written-text/)*

Yoga: "Artificial Intelligence tools like ChatGPT have been fastly growing, drawing attention from many internet users. The company that created it, OpenAI, is now releasing a tool to detect AI-written text named AI text classifier. This release happened following numerous reports that universities and schools are banning the company's ChatGPT due to its ability to complete students' homework. OpenAI warns that it is still unreliable enough to detect AI-generated content for now but will likely improve as time passes and is trained with further data."

![memo](/assets/images/memo16.png) *[Announcing .NET 8 Preview 1](https://devblogs.microsoft.com/dotnet/announcing-dotnet-8-preview-1/)*

Brain: "Microsoft announced a preview of .NET 8, an upcoming long-term support (LTS) release. It came with incremental performance improvements, bug fixes, and better Linux support. It also has some upgrades in SDK and tooling of MAUI for cross-platform mobile and desktop development. It's great to hear that this framework continues to grow and improve."

![memo](/assets/images/memo16.png) *[Why you should no longer use var in C#](https://medium.com/medialesson/why-you-should-no-longer-use-var-in-c-965380408de6)*

Dika: "In this article, the author tries to express his opinion related to the disadvantages of using var C#, like unnecessary allocation of the list as soon as the condition occurs that cause a bad code, difficulty to guess the strong type for some cases, and difficulty to review the code if that's open outside of IDE like the visual studio that has IntelliSense inside them. The explanation and example seem to make sense and make us reconsider using var in C#."

![memo](/assets/images/memo16.png) *[Transporting your components anywhere with React Portals](https://hackernoon.com/how-to-transport-your-components-anywhere-with-react-portals)*

Rizqun: "In this article, the author provides a tutorial on using React Portals to transfer the components we create anywhere. The author explained that createPortals() accepts two arguments, the DOM element we want to return and the DOM element we want to teleport our DOM element to. Portals are a pretty powerful tool in React. They are a useful way to solve the main issue with component-based systems, transporting certain elements above all the rest."

![memo](/assets/images/memo16.png) *[Down the Cloudflare / Stripe / OWASP Rabbit Hole: A Tale of 6 Rabbits Deep](https://www.troyhunt.com/down-the-cloudflare-stripe-owasp-rabbit-hole-a-tale-of-6-rabbits-deep/)*

Frandi: "Troy Hunt, the creator of [Have I Been Pwned](https://haveibeenpwned.com/), told a story about his experience in digging through the root cause of an issue in HIBP where a user paid for a subscription successfully through Stripe, but, unfortunately, the status was not updated correctly in the site. I personally learned a lot about how a simple update on OWASP rules potentially gives unexpected results on different applications."